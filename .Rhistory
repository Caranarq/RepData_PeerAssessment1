head(c1)
head(rawD)
str(rawD)
as.factor(rawD$interval)
str(rawD)
?tapply
tsd <- tapply(c1$steps, c1$interval, sum)
tsd <- tapply(c1$steps, c1$interval, mean)
tsd
plot.ts(tsd)
dff <- as.data.frame(tsd)
plot.ts(dff)
which.max(dff)
which.max(tsd)
tsd
dff
colnames(dff)
colnames(dff$tsd)
which.max(dff$tsd)
which.max(dff$104)
which.max(dff[104, ])
length(dff)
dff[104, ]
mas <- which.max(tsd)
mas
plot.ts(dff, ylab = "steps")
plot.ts(dff, ylab = "average steps")
str(tsd)
tsd
str(rawD)
rawD$interval <- as.POSIXct(rawD$interval)
help("as.POSIXct.numeric")
rawD$interval <- as.POSIXct(rawD$interval, 0)
rawD$interval <- as.POSIXct(rawD$interval, origin = 0)
plot.ts(dff, ylab = "average steps")
which.max(tsd)
tsd[10:20, ]
tsd[c(10:20), ]
tsd[1, ]
tsd[5, ]
tsd[5]
tsd[20:30]
tsd[40:50]
tsd[70:80]
tsd[95:105]
tsd[104]
tsd["835"]
mas
tsd[mas]
row.names(mas)
mas
row.names(tsd[mas])
names(tsd[mas])
!complete.cases(rawD)
sum(!complete.cases(rawD))
allnas <- sum(!complete.cases(rawD))
rawD[allnas, ]
allnas <- !complete.cases(rawD)
allnas <- !complete.cases(rawD)
sumnas <- sum(allnas)
rawD[allnas, ]
head(allnas)
head(rawD[allnas, ])
thenas <- rawD[allnas, ]
sum(is.na(thenas$steps))
length(thenas)
str(thenas)
sum(is.na(thenas$date))
sum(is.na(thenas$interval))
hist(sumSteps)
allnas
thenas
dat <- read.table(text = "id    taxa        length  width
101   collembola  2.1     0.9
102   mite        0.9     0.7
103   mite        1.1     0.8
104   collembola  NA      NA
105   collembola  1.5     0.5
106   mite        NA      NA", header=TRUE)
dat
which(sapply(dat, is.numeric)
)
?where
thenas
allnas
!is.false(thenas)
thenas=T
thenas <- rawD[allnas, ]
thenas==T
allnas == T
allnas[allnas == T]
dealtDS <- rawD
dealtDS[2281, ]
row <- dealtDS[2281, ]
getint <- row$interval
getint
dff[getint]
dff[getint, ]
dff["2200", ]
dff[as.character(getint), ]
getmean <- dff[as.character(getint), ]
for(i in naIndex) {
row <- dealtDS[i, ]
getint <- row$interval
getmean <- dff[as.character(getint), ]
dealtDS[i, "steps"] <- getmean
}
naIndex <- allnas[allnas == T]
for(i in naIndex) {
row <- dealtDS[i, ]
getint <- row$interval
getmean <- dff[as.character(getint), ]
dealtDS[i, "steps"] <- getmean
}
asdasfd
rm(getint)
rm(getmean)
rm(row)
rownames(naIndex)
names(naIndex)
naIndex
names(allnas)
str(allnas)
str(naIndex)
!is.na(rawD$steps)
rawD[!is.na(rawD$steps)]
rawD[!is.na(rawD$steps), ]
rawD[is.na(rawD$steps), ]
rownames(rawD[is.na(rawD$steps), ])
naIndex <- rownames(rawD[is.na(rawD$steps), ])
dff[as.character(dealtDS[17568, "interval"]), ]
for(i in naIndex) {
dealtDS[i, "steps"] <- dff[as.character(dealtDS[i, "interval"]), ]
}
dealtDS[is.na(rawD$steps), ]
dealtDS[!is.na(rawD$steps), ] == rawD[!is.na(rawD$steps), ]
rawD[3796, ]
dealtDS[3796, ]
dealtDS[3797, ]
dealtDS[3797, ]
dealtDS == rawD
dealtDS$steps == rawD$steps
!is.na(dealtDS$steps == rawD$steps)
!is.na(dealtDS$steps == rawD$steps)==TRUE
sum(!is.na(dealtDS$steps == rawD$steps))
head(rawD)
head(dealtDS)
is.na(dealtDS$steps)
sum(is.na(dealtDS$steps))
dealtDS[!is.na(rawD$steps), ] == rawD[!is.na(rawD$steps), ]
nascomp <- (dealtDS[!is.na(rawD$steps), ] == rawD[!is.na(rawD$steps), ])
?or
head(nascomp)
nascomp["steps"==T, ]
nascomp[1, ]
nascomp[, "steps"==T]
nascomp[17280, ]
nascomp
nascomp[2==T, ]
nascomp[2, ]==T
nascomp[2, ]
class(nascomp)
?"matrix"
subset(nascomp, "steps"==TRUE)
str(nascomp)
nascomp <- as.data.frame(nascomp)
nascomp[2==T, ]
nascomp
nascomp[1==T, ]
nascomp[1, 2]
nascomp[nascomp$steps==T, 2]
sum(nascomp[1, ])
nascomp[, 1]
sum(nascomp[, 1])
nascomp[, 1]==T
nascomp[TRUE, 1]
nascomp[==TRUE, 1]
nascomp["steps"==T, ]
nascomp[nascomp$steps==T, 2]
nascomp
nascomp[nascomp$steps=T, ]
nascomp["steps"==T, ]
nascomp[nascomp$steps==T, ]
rownames(nascomp[nascomp$steps==T, ])
check <- rownames(nascomp[nascomp$steps==T, ])
rawD[check, 1] == dealtDS[check, 1]
for(i in check) {
print(rawD[i, ])
print(dealtDS[i, ])
}
nascomp["steps"==T, ]
nascomp[nascomp$steps==T, ]
for(i in check) {
print(rawD[i, ])
print(dealtDS[i, ])
}
rawD[rawD$interval==230, ]
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,15), col = "salmon", las=3, main = "Histogram of total Daily Steps")
sumSteps1 <- tapply(dealtDS$steps, dealtDS$date, sum)
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,15), col = "salmon", las=3, main = "Histogram of total Daily Steps")
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,20), col = "salmon", las=3, main = "Histogram of total Daily Steps")
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,50), col = "salmon", las=3, main = "Histogram of total Daily Steps")
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,200), col = "salmon", las=3, main = "Histogram of total Daily Steps")
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,80), col = "salmon", las=3, main = "Histogram of total Daily Steps")
?frequency
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,80), col = "430", las=3, main = "Histogram of total Daily Steps")
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,80), col = "30", las=3, main = "Histogram of total Daily Steps")
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,80), col = 430, las=3, main = "Histogram of total Daily Steps")
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,80), col = 430, las=3, main = "Histogram of total Daily Steps")
colors()[grep("blue",colors())]
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,80), col = "aliceblue", las=3, main = "Histogram of total Daily Steps")
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,80), col = "royalblue", las=3, main = "Histogram of total Daily Steps")
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,80), col = "cadetblue1", las=3, main = "Histogram of total Daily Steps")
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,80), col = "cadetblue2", las=3, main = "Histogram of total Daily Steps")
head(sumSteps)
mean(sumSteps1)
mean(sumSteps)
mean(sumSteps, na.rm = T)
median(sumSteps1)
median(sumSteps, na.rm = T)
max(sumSteps1)
max(sumSteps)
max(sumSteps1)
max(sumSteps, na.rm = T)
which.max(sumSteps1)
which.max(sumSteps1)
which.max(sumSteps, na.rm = T)
which.max(sumSteps1)
which.max(sumSteps)
sumsteps1[which.max(sumSteps1), ]
sumsteps[which.max(sumSteps), ]
write.csv(sumSteps, "sumsteps")
write.csv(sumSteps1, "sumsteps1")
getwd()
write.csv(dealtDS, "dealtDS.csv")
write.csv(rawD, "rawD.csv")
naIndex
for(i in naIndex) {
print(i)
}
naIndex
str(naIndex)
head(naIndex)
tail(naIndex)
naIndex[2011:2026]
for(i in naIndex[2011:2026]) {
print(i)
}
row.names(rawD)=="17290"
dealtDS <- rawD
for(i in naIndex) {
if(is.na(rawD[i, "steps"]))
dealtDS[i, "steps"] <- dff[as.character(dealtDS[i, "interval"]), ]
}
write.csv(dealtDS, "dealtDS.csv")
write.csv(dealtDS, "dealtDS.csv")
dealtDS <- rawD
dealtDS[1, "interval"]
naIndex
dff[as.character(dealtDS[2011, "interval"]), ]
dff
dealtDS <- rawD
for(i in naIndex[2011:2026]) {
print(i)
}
print(dealtDS[i, ])
for(i in naIndex[2011:2026]) {
print(dealtDS[i, ])
}
for(i in naIndex[2011:2026]) {
print(dealtDS[i, "steps"])
}
for(i in naIndex) {
print(dealtDS)
}
for(i in naIndex) {
print(dealtDS[i, ])
}
dff
dff[12960, ]
as.character(dealtDS[12960, "interval"]
)
dff[2355, ]
dff["2355", ]
dff[as.character(dealtDS[12960, "interval"]), ]
dealtDS[naIndex[2011:2026], ]
naIndex <- rownames(rawD[is.na(rawD$steps), ])
for(i in naIndex[2011:2026]) {
if(is.na(rawD[i, "steps"]))
dealtDS[i, "steps"] <- dff[as.character(dealtDS[i, "interval"]), ]
}
dealtDS[naIndex[2011:2026], ]
dealtDS <- rawD
dealtDS[12960:12970, ]
for(i in naIndex[2011:2026]) {
if(is.na(rawD[i, "steps"]))
dealtDS[i, "steps"] <- dff[as.character(dealtDS[i, "interval"]), ]
}
dealtDS[12960:12970, ]
length(naIndex)
dealtDS <- rawD
for(i in naIndex[1:length(naIndex)]) {
if(is.na(rawD[i, "steps"]))
dealtDS[i, "steps"] <- dff[as.character(dealtDS[i, "interval"]), ]
}
dealtDS[12960:12970, ]
write.csv(dealtDS, "dealtDS2.csv")
dealtDS <- rawD
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,80), col = "cadetblue2", las=3, main = "Histogram of total Daily Steps, with NA imputed")
sumSteps1 <- tapply(dealtDS$steps, dealtDS$date, sum)
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,80), col = "cadetblue2", las=3, main = "Histogram of total Daily Steps, with NA imputed")
mean(sumSteps1)
mean(sumSteps, na.rm = T)
median(sumSteps1)
median(sumSteps, na.rm = T)
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,20), col = "cadetblue2", las=3, main = "Histogram of total Daily Steps, with NA imputed")
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,15), col = "cadetblue2", las=3, main = "Histogram of total Daily Steps, with NA imputed")
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,10), col = "cadetblue2", las=3, main = "Histogram of total Daily Steps, with NA imputed")
mean(sumSteps1)
mean(sumSteps, na.rm = T)
mean(sumSteps1,  na.rm = T)
mean(sumSteps, na.rm = T)
median(sumSteps1,  na.rm = T)
median(sumSteps, na.rm = T)
dealtDS==rawD
dealtDS[naIndex[2011:2026], ]
for(i in naIndex[1:length(naIndex)]) {
print(dealtDS[i, ])
dealtDS[i, "steps"] <- dff[as.character(dealtDS[i, "interval"]), ]
print(dealtDS[i, ])
}
dealtDS[17568, ]
sumSteps1 <- tapply(dealtDS$steps, dealtDS$date, sum)
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,10), col = "cadetblue2", las=3, main = "Histogram of total Daily Steps, with NA imputed")
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,20), col = "cadetblue2", las=3, main = "Histogram of total Daily Steps, with NA imputed")
hist(sumSteps1, breaks = 60, xlim = c(0,25000), ylim = c(0,15), col = "cadetblue2", las=3, main = "Histogram of total Daily Steps, with NA imputed")
mean(sumSteps1,  na.rm = T)
mean(sumSteps, na.rm = T)
median(sumSteps1,  na.rm = T)
median(sumSteps, na.rm = T)
sumSteps1
write.csv(sumSteps, "sumsteps.csv")
write.csv(sumSteps1, "sumsteps.csv")
write.csv(sumSteps1, "sumsteps1.csv")
write.csv(sumSteps, "sumsteps.csv")
unique(rawD$date)
dates <- unique(rawD$date)
dates["2012-11-30"]
dates["2012-11-29"]
dates["2012-11-28"]
dates[60]
dates[1]
class(dates)
mean(sumSteps, na.rm = T) - mean(sumSteps1,  na.rm = T)
median(sumSteps, na.rm = T) - median(sumSteps1,  na.rm = T)
length(naIndex)
?weekdays
weekdays(dealtDS$date)
as.POSIXct(dealtDS$date)
wkdDS <- dealtDS
wkdDS$weekday <- as.POSIXct(wkdDS$date)
head(wkdDS)
weekdays(wkdDS$weekday)
wkdDS$weekday <- weekdays(wkdDS$date)
wkdDS$weekday <- as.POSIXct(wkdDS$date)
head(wkdDS)
weekdays(wkdDS$date)
wkdDS$weekday <- weekdays(wkdDS$weekday)
head(wkdDS)
unique(wkdDS$weekday)
unique(wkdDS$weekday)[c(6,7)]
ifelse(wkdDS$weekday==weekend, wkdDS$weekday <- 0, wkdDS$weekday <- 1)
weekend <- unique(wkdDS$weekday)[c(6,7)]
ifelse(wkdDS$weekday==weekend, wkdDS$weekday <- 0, wkdDS$weekday <- 1)
wkdDS
write.csv(wkdDS, "wkdDS.csv")
wkdDS[1729, ]
wkdDS[1728, ]
wkdDS[2017, ]
wkdDS[2016, ]
unique(wkdDS$weekday)
wkdDS$weekday <- weekdays(wkdDS$weekday)
wkdDS <- dealtDS
wkdDS$weekday <- as.POSIXct(wkdDS$date)
wkdDS$weekday <- weekdays(wkdDS$weekday)
head(wkdDS)
length(wkdDS)
length(wkdDS$steps)
for(i in 1:length(wkdDS$steps)) {
wkdDS[i, "weekday"] <- ifelse(wkdDS[i, "weekday"]==6|7, 1, 0)
}
unique(wkdDS$weekday)
ifelse(wkdDS[1, "weekday"]==6|7, 1, 0)
wkdDS[1, "weekday"]
wkdDS <- dealtDS
wkdDS$weekday <- as.POSIXct(wkdDS$date)
wkdDS$weekday <- weekdays(wkdDS$weekday)
wkdDS[1, "weekday"]
ifelse(wkdDS[1, "weekday"]==6|7, 1, 0)
weekend
ifelse(wkdDS[1, "weekday"]==weekend[1]|weekend[2], 1, 0)
wkdDS[1, "weekday"]==weekend
wkdDS[1, "weekday"]==weekend[1]
wkdDS[, "weekday"=="domingo"]
wkdDS[, 4=="domingo"]
wkdDS[4=="domingo", ]
wkdDS[, "weekday"]
wkdDS[, "weekday"]=="domingo"
wkdDS[9981, "weekday"]==weekend[1]
wkdDS[9981, "weekday"]==weekend[2]
wkdDS[9981, "weekday"]==weekend[1]|weekend[2]
wkdDS[9981, "weekday"]==(weekend[1]|weekend[2])
wkdDS[9981, "weekday"]==weekend[1]
wkdDS[9981, "weekday"]==weekend[2]
theDF <- wkdDS
for(i in 1:length(wkdDS$steps)) {
print(wkdDS[i, "weekday"])
wkdDS[i, "weekday"] <- ifelse(wkdDS[i, "weekday"]==weekend[1], 1, 0)
wkdDS[i, "weekday"] <- ifelse(wkdDS[i, "weekday"]==weekend[2], 1, 0)
print(wkdDS[i, "weekday"])
}
wkdDS
theDF <- wkdDS
head(wkdDS)
wkdDS <- dealtDS
wkdDS$weekday <- as.POSIXct(wkdDS$date)
wkdDS$weekday <- weekdays(wkdDS$weekday)
unique(wkdDS$weekday)
theDF <- wkdDS
wkdDS[9981, "weekday"]
wkdDS[9981, "weekday"] <= 6
wkdDS[9981, "weekday"] <= 7
wkdDS[9981, "weekday"] <= 5
wkdDS[9981, "weekday"] = 1
wkdDS <- theDF
wkdDS[9981, "weekday"] == 1
wkdDS[9981, "weekday"] == 2
wkdDS[9981, "weekday"] == 3
wkdDS[9981, "weekday"] == 4
wkdDS[9981, "weekday"] == 5
wkdDS[9981, "weekday"] == 6
wkdDS[9981, "weekday"] == 7
wkdDS[9981, "weekday"] == "domingo"
wkdDS[, "weekday"] == "domingo"
wkdDS[, "weekday"] == weekend[1]
wkdDS[, "weekday"] == weekend[2]
wkdDS
head(wkdDS)
sum(wknd1|wknd2)
wknd1 <- wkdDS[, "weekday"] == weekend[1]
wknd2 <- wkdDS[, "weekday"] == weekend[2]
sum(wknd1|wknd2)
sum(wknd1)
sum(wknd2)
wkds$isweekend <- wknd1|wknd2
wkdDS$isweekend <- wknd1|wknd2
head(wkdDS)
wkdDS[wkdDS$isweekend==t, ]
wkdDS[wkdDS$isweekend, ]
wkdDS <- theDF
head(wkdDS)
wkdDS$isweekend <- wknd1|wknd2
head(wkdDS)
head(wkdDS[wkdDS$isweekend, ])
head(wkdDS[wkdDS$!isweekend, ])
head(wkdDS[wkdDS$isweekend==F, ])
wkdDS$isweekend <- as.factor(wkdDS$isweekend)
class(wkdDS$isweekend)
str(wkdDS)
wkdDS[wkdDS$isweekend, ]
wkdDS[wkdDS$isweekend=T, ]
wkdDS[wkdDS$isweekend, ]
wkdDS[wkdDS$isweekend==t, ]
table(wkdDS$isweekend)
wkdDS$isweekend==T
wkdDS[wkdDS$isweekend==T, ]
wkdDS[wkdDS$isweekend==F, ]
attach(mtcars)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
hist(wt)
hist(mpg)
hist(disp)
hist(wt)
hist(disp)
hist(wt)
matrix(c(1,1,2,3)
)
?layout
nf <- layout(matrix(c(2,0,1,3),2,2,byrow=TRUE), widths=c(6,1), heights=c(1,6), TRUE)
layout.show(nf)
par(oma=c(3,3,3,3))
layout.show(nf)
rm(nf)
par(2,1)
par(mfrow=c(2,1))
int.nd <- tapply(allweekend$steps, allweekend$interval, mean)
int.dy <- tapply(allweekdays$steps, allweekdays$interval, mean)
allweekend <- wkdDS[wkdDS$isweekend==T, ]
allweekdays <- wkdDS[wkdDS$isweekend==F, ]
int.nd <- tapply(allweekend$steps, allweekend$interval, mean)
int.dy <- tapply(allweekdays$steps, allweekdays$interval, mean)
plot.ts(dff, ylab = "average steps")
plot.ts(dff, ylab = "average steps")
resetPar <- function() {
dev.new()
op <- par(no.readonly = TRUE)
dev.off()
op
}
resetPar()
hist(sumSteps, breaks = 60, xlim = c(0,25000), ylim = c(0,10), col = "salmon", las=3, main = "Histogram of total Daily Steps")
save.image("F:/Shared/Learning/DataScience/04 - Reproductible Research/Week2/PA1/RepData_PeerAssessment1/20150610.RData")
